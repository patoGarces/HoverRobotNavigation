planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    global_frame: map # odom # ðŸ‘ˆ cambie de map a odom(para navegar sin mapa)
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.5

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 10.0
    global_frame: map # odom # ðŸ‘ˆ cambie de map a odom(para navegar sin mapa)


    progress_checker_plugin: "progress_checkeAr"
    goal_checker_plugins: ["goal_checker"]
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.2
      movement_time_allowance: 5.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25


    controller_plugins: ["FollowPath"]
    FollowPath:
      # plugin: "dwb_core::DWBLocalPlanner"
      # # plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController" # Para navegacion sin sensores

      # # debug_trajectory_details: True
      # # allow_backwards_motion: false
      # min_vel_x: 0.00
      # max_vel_x: 0.3
      # min_vel_y: 0.0
      # max_vel_y: 0.0
      # min_vel_theta: -1.0
      # max_vel_theta: 1.0
      # acc_lim_x: 2.5
      # acc_lim_theta: 2.5
      # max_angular_vel: 1.5 

      # robot_radius: 0.22

      # critics: ["RotateToGoal", "Oscillation", "ObstacleFootprint", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      # # critics: ["GoalAlign", "PathAlign"]
      # # parÃ¡metros tÃ­picos de algunos critics
      # PathAlign:
      #   scale: 32.0
      #   forward_point_distance: 0.1
      # GoalAlign:
      #   scale: 24.0
      #   forward_point_distance: 0.1
      # PathDist:
      #   scale: 32.0
      # GoalDist:
      #   scale: 24.0


      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.26
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.26
      min_speed_theta: 0.0
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      limit_vel_cmd_in_traj: False
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map # odom # ðŸ‘ˆ cambie de map a odom(para navegar sin mapa)
    default_bt_xml_filename: "navigate_to_pose_w_replanning_and_recovery.xml"

behavior_server:
  ros__parameters:
    use_sim_time: false
    global_frame: map # odom # ðŸ‘ˆ cambie de map a odom(para navegar sin mapa)


# =========================
# Local Costmap
# =========================
local_costmap:
  local_costmap:
    ros__parameters:
      enabled: true
      global_frame: map # odom # ðŸ‘ˆ cambie de map a odom(para navegar sin mapa)
      robot_base_frame: base_link
      update_frequency: 5.0
      publish_frequency: 2.0
      width: 3
      height: 3
      resolution: 0.05
      rolling_window: true

      robot_radius: 0.15
      # OpciÃ³n poligonal (si querÃ©s mÃ¡s precisiÃ³n):
      # footprint:
      #   - [0.15, 0.12]
      #   - [0.15, -0.12]
      #   - [-0.15, -0.12]
      #   - [-0.15, 0.12]

      plugins: ["obstacle_layer", "inflation_layer", "range_sensor_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          sensor_frame: lidar_link
          data_type: LaserScan
          marking: true
          clearing: true
          max_obstacle_height: 2.0
          obstacle_max_range: 3.0
          raytrace_max_range: 3.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.2
        cost_scaling_factor: 1.0

      range_sensor_layer:
        plugin: "nav2_costmap_2d::RangeSensorLayer"
        topics: ["/collision_sensor_FL", "/collision_sensor_FR"]
        clear_on_max_reading: false # true
        no_readings_timeout: 0.0   # tiempo para considerar inactivo si no hay datos
        mark_threshold: 0.6        # confianza para marcar obstÃ¡culo


# =========================
# Global Costmap
# =========================
global_costmap:
  global_costmap:
    ros__parameters:
      enabled: true
      global_frame: map # odom # ðŸ‘ˆ cambie de map a odom(para navegar sin mapa)
      robot_base_frame: base_link
      update_frequency: 2.0
      publish_frequency: 1.0
      width: 10
      height: 10
      origin_x: -5.00
      origin_y: -5.00
      resolution: 0.05
      rolling_window: false
      always_send_full_costmap: true

      robot_radius: 0.15
      # OpciÃ³n poligonal (si querÃ©s mÃ¡s precisiÃ³n):
      # footprint:
      #   - [0.15, 0.12]
      #   - [0.15, -0.12]
      #   - [-0.15, -0.12]
      #   - [-0.15, 0.12]

      use_sim_time: false
      static_map: true

      plugins: ["static_layer","obstacle_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_topic: /map
        suscribe_to_updates: true

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          sensor_frame: lidar_link
          data_type: LaserScan
          marking: true
          clearing: true

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.2
        cost_scaling_factor: 1.0